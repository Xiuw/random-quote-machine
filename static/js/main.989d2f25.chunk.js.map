{"version":3,"sources":["DisplayData.js","App.js","index.js"],"names":["DisplayData","_ref","quoteData","fontSize","map","n","i","react_default","a","createElement","key","id","quote","author","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","random","Math","floor","state","data","length","setState","fadeIn","onHandleChange","e","_this$setState","_e$target","target","name","value","defineProperty","onHandleSubmit","fetch","method","headers","Content-Type","body","JSON","stringify","inputQuote","inputAuthor","then","response","json","console","log","route","message","onHandleRoute","_this2","_this3","_this$state","filteredQuote","filter","className","onClick","onAnimationEnd","react_social_icons","bgColor","fgColor","style","height","width","network","url","src_DisplayData","type","rows","cols","onChange","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.989d2f25.chunk.js","sourcesContent":["import React from 'react';\n\nconst DisplayData = ({quoteData,fontSize}) =>{\n\t// console.log(quoteData);\n\treturn(\n\t\tquoteData.map((n,i)=>{\n\t\t\treturn(\n\t\t\t\t<div \n\t\t\t\tkey={i}>\t\n\t\t\t\t<p id='text'>{quoteData[i].quote} </p>\n\t\t\t\t<p id='author'>{quoteData[i].author}</p>\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t)\n}\n\nexport default DisplayData;\n","import React, { Component } from 'react';\nimport DisplayData from './DisplayData';\nimport { SocialIcon } from 'react-social-icons';\nimport './App.css';\n\n\nclass App extends Component{\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state= {\n\t\t\tdata:[],\n\t\t\tinputQuote:'',\n\t\t\tinputAuthor:'',\n\t\t\trandom:Math.floor(Math.random() * 10),\n\t\t\troute:'main',\n\t\t\tmessage:'',\n\t\t\tfadeIn:false,\n\t\t\t\n\t\t}\t\n\t} \n\tcomponentDidMount(){ //fetch data from the database\n\t\tfetch('https://intense-reef-85189.herokuapp.com/getQuote')\n\t\t.then(response=>response.json())\n\t\t.then(data=> {\n\t\t\tthis.setState({data})\n\t\t})\n\t}\n\n\thandleClick = () =>{\t//handle random, get new random number if random is same as previous one\n\t \tlet random =  Math.floor(Math.random() * this.state.data.length);\n\t\t \tdo{\n\t\t \t random =  Math.floor(Math.random() * this.state.data.length);\n\t\t \t}while(random === this.state.random)\n \t\tthis.setState({random:random, fadeIn:true\n \t\t});  \n\t }\n\n\tonHandleChange=(e)=>{\n\t\tconst {name,value} = e.target\n\t\tthis.setState({[name]:value, message:''});\n\t}\n\n\tonHandleSubmit = (e) => { //Handle submit new quote to the database\n\t\tfetch('https://intense-reef-85189.herokuapp.com/submitQuote',{\n\t\t\tmethod:'post',\n\t\t\theaders:{'Content-Type':'Application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tquote:this.state.inputQuote,\n\t\t\t\tauthor:this.state.inputAuthor\n\t\t\t})\n\t\t}).then(response => response.json())\n\t\t.then(data=>console.log(data));\n\t\tthis.setState({\n\t\t\troute:'other',\n\t\t\tinputQuote:'',\n\t\t\tinputAuthor:'',\n\t\t\tmessage:'**Your quote has been sucessfully submitted, you can choose to return or submit a new quote.'\n\t\t})\n\t}\n\tonHandleRoute=(e)=>{\n\t\tconst {route} = this.state;\n\t\tif(route === 'main' || route ==='other'){\n\t\t\tthis.setState({route:'submit'});\n\t\t}\n\t\telse if(route ==='submit'){\n\t\t\tthis.setState({route:'main'});\n\t\t}else {\n\t\t\tthis.setState({route:'other'});\n\t\t}\n\t}\n\n\t \n\trender() {\n\t  \tconst{random , inputQuote, inputAuthor,route,message,fadeIn} = this.state;\n\t  \tconst filteredQuote = this.state.data.filter((n,i )=> i===random ? n : null);\n\t \n\t    return (\n\t    <div className='App'> \n\t    \t{\n\t    \troute === 'main' ? //condition statement which page to render(main or submit form)\n\t    \t<div>\n\t    \t\n\t\t    \t<div id='quote-box'>\n\t\t    \t\t<p className='nav' onClick={this.onHandleRoute}>Share a new quote</p>\n\t\t\t   \t\t<div className='quoteCSS'>\n\t\t\t   \t\t\t<div \n\t\t\t   \t\t\tclassName={fadeIn?'effect_fade':''}\n\t\t\t\t   \t\tonAnimationEnd={() => this.setState({ fadeIn: false })}>\n\t\t\t\t\t   \t\t<SocialIcon \n\t\t\t\t\t   \t\t\tid='tweet-quote'\n\t\t\t\t\t   \t\t\tbgColor=\"#38A1F3\" \n\t\t\t\t\t   \t\t\tfgColor=\"fff\" \n\t\t\t\t\t   \t\t\tstyle={{ height: 30, width: 30, }} \n\t\t\t\t\t   \t\t\tnetwork=\"twitter\" \n\t\t\t\t\t   \t\t\turl='http://twitter.com/intent/tweet'\n\n\t\t\t\t\t   \t\t\t/>\n\t\t\t\t   \t\t\n\t\t\t\t\t\t\t<DisplayData   quoteData ={filteredQuote}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t \t</div>\n\t\t\t\t \t \n\t\t\t\t \t<p><button \n\t\t\t\t\t \tid='new-quote' \n\t\t\t\t\t \tclassName = 'btn-quote' \n\t\t\t\t\t \tonClick={this.handleClick}>New Quote\n\t\t\t\t \t</button></p>\n\n\t\t\t  \t</div>\t\n\t\t\n\t\t  \t</div>\n\t\t  \t:\n\t\t  \t<div>\n\t\t      \t\n\t\t    \t<div className='formCSS'>\n\t\t    \t<p className='nav'onClick={this.onHandleRoute}> Return to main</p>\n\t\t    \t<p className=\"msg\">{message}</p>\t\n\t\t    \t \t<p>*Submit your quote information below....</p>\n\t\t    \t \t\n\t\t    \t \t<div className ='input-section'>\n\t\t\t    \t\t<label>Quote:</label>\n\t\t\t\t     \t<textarea \n\t\t\t\t     \t\tclassName ='inputArea'\n\t\t\t\t     \t\tname='inputQuote' \n\t\t\t\t     \t\tvalue ={inputQuote} \n\t\t\t\t     \t\ttype='text' \n\t\t\t\t     \t\trows='6' cols='60'\n\t\t\t\t     \t\tonChange={this.onHandleChange}\n\t\t\t\t     \t/>\n\t\t\t     \t</div>\n\t\t\t\t     <div className ='input-section' >\n\t\t\t\t     \t<label>Author or Source:</label>\n\t\t\t\t     \t<input \n\t\t\t\t     \t\tclassName='inputArea' \n\t\t\t\t     \t\ttype='text' \n\t\t\t\t     \t\tname ='inputAuthor' \n\t\t\t\t     \t\tvalue={inputAuthor} \n\t\t\t\t     \t\tonChange={this.onHandleChange} \n\t\t\t     \t\t/>\n\t\t\t     \t</div>\n\t\t\t     \t<div>\n\t\t\t     \t<button className='btn-quote'onClick={this.onHandleSubmit}>Submit</button>\n\t\t\t\t\t</div>\n\t\t      \t</div>\n\t\t     \n\t\t     </div>\n\n\t\t     \n\t    \t} \n\t\t </div> \n\t    );\n\t  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}