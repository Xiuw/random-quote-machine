{"version":3,"sources":["components/DisplayData.js","components/SubmitNewQuote.js","App.js","index.js"],"names":["DisplayData","_ref","quoteData","react_default","a","createElement","id","className","quote","author","SubmitNewQuote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onHandleChange","e","_e$target","target","name","value","setState","defineProperty","onHandleSubmit","state","inputQuote","length","inputAuthor","alert","fetch","method","headers","Content-Type","body","JSON","stringify","then","response","json","data","console","log","route","message","_this$state","onClick","handleRoute","type","placeholder","rows","onChange","Component","App","onHandleGenerate","random","fadeIn","onHandleRoute","_this2","_this3","onAnimationEnd","href","style","color","fontSize","components_DisplayData","components_SubmitNewQuote","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.a750a028.chunk.js","sourcesContent":["import React from 'react';\nconst DisplayData = ({quoteData}) =>{\n\treturn(\n\t<div>\t\n\t<p id='text'><i className=\"fas fa-quote-left\"></i> {quoteData.quote} <i className=\"fas fa-quote-right\"></i> </p>\n\t<p id='author'>{quoteData.author}</p>\n\t</div>\n\t)\n}\nexport default DisplayData;\n","import React, {Component} from 'react';\nimport '../App.css';\nclass SubmitNewQuote extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state= {\n\t\t\tinputQuote:'',\n\t\t\tinputAuthor:'',\n\t\t\tmessage:'',\n\t  \t}\n\t } \t\n\tonHandleChange=(e)=>{\n\t\tconst {name,value} = e.target\n\t\tthis.setState({[name]:value});\n\t}\n\tonHandleSubmit = (e) => { //Handle submit new quote to the database\n\t\tif(this.state.inputQuote.length <=10 || this.state.inputAuthor.length <=1){\n\t\t\talert(\"Please check your form again\");\n\t\t}else{\n\t\tfetch('https://intense-reef-85189.herokuapp.com/submitQuote',{\n\t\t\tmethod:'post',\n\t\t\theaders:{'Content-Type':'Application/json'},\n\t\t\tbody:JSON.stringify({\n\t\t\t\tquote:this.state.inputQuote,\n\t\t\t\tauthor:this.state.inputAuthor\n\t\t\t})\n\t\t}).then(response => response.json())\n\t\t.then(data=>{\n\t\t\tconsole.log(data);\n\t\t\tif(data[0]){\n\t\t\t\tconsole.log(\"yes\");\n\t\t\t\tthis.setState({\n\t\t\t\t\troute:'other',\n\t\t\t\t\tinputQuote:'',\n\t\t\t\t\tinputAuthor:'',\n\t\t\t\t\tmessage:'*Your quote has been sucessfully submitted.'\n\t\t\t\t})\n\t\t\t}}\t\t\t\n\t\t);}\n\t}\n \n\trender(){\n\t\tconst{inputQuote,inputAuthor,message} = this.state;\n\treturn(\n\t\t<div className=\"formPage\">\n    \t<div className='formCSS'>\n    \t<p className='nav'onClick={this.props.handleRoute}> Return to quote page</p>\t\n    \t \t<div className ='input-section'>\n\t\t     \t<textarea \n\t\t     \t\tclassName ='inputArea'\n\t\t     \t\tname='inputQuote' \n\t\t     \t\tvalue ={inputQuote} \n\t\t     \t\ttype='text' \n\t\t     \t\tplaceholder=\"Write your quote here\"\n\t\t     \t\trows='6' \n\t\t     \t\tonChange={this.onHandleChange}\n\t\t     \t/>\n\t     \t</div>\n\t\t     <div className ='input-section' >\n\t\t     \t<input \n\t\t     \t\tclassName='inputArea' \n\t\t     \t\ttype='text'\n\t\t     \t\tplaceholder=\"Author or source\"\n\t\t     \t\tname ='inputAuthor' \n\t\t     \t\tvalue={inputAuthor} \n\t\t     \t\tonChange={this.onHandleChange} \n\t     \t\t/>\n\t     \t<p className=\"msg\">{message}</p>\t\t\n\t     \t</div>\n\t     \t<div>\n\t     \t<button className='btn-quote'onClick={this.onHandleSubmit}>Submit</button>\n\t\t\t</div>\n      \t</div>\n      \t</div>\n\n  )}\n}\nexport default SubmitNewQuote;\n","import React, { Component } from 'react';\nimport DisplayData from './components/DisplayData';\nimport SubmitNewQuote from './components/SubmitNewQuote';\nimport './App.css';\n\nclass App extends Component{\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state= {\n\t\t\trandom:[],\n\t\t\troute:'main',\n\t\t\tfadeIn:false,\t\n\t\t}\t\n\t} \n\tcomponentDidMount(){ //get a quote from the database (random quote will be handle on the server side of the database)\n\t\tfetch('https://intense-reef-85189.herokuapp.com/getQuote')\n\t\t.then(response=>response.json())\n\t\t.then(data=> {\n\t\t\tthis.setState({random:data})\n\t\t})\n\t}\n\n\tonHandleGenerate = () =>{//handle generate new quote button to get a new random quote\n \t\tfetch('https://intense-reef-85189.herokuapp.com/getQuote')\n\t\t.then(response=>response.json())\n\t\t.then(data=> { \n\t\t\tconsole.log(data.id);\n\t\t\tif(data.id === this.state.random.id){\n\t\t\t\tthis.onHandleGenerate(); //function will be call again if server generate the same quote as the previous\n\t\t\t}else{\n\t\t\t\tthis.setState({random:data,fadeIn:true})\t\n\t\t\t}\t\n\t\t})\n\t }\n\tonHandleRoute=(e)=>{ //handle route change \n\t\tif(this.state.route === 'main'){\n\t\t\tthis.setState({route:'form'});\n\t\t}else {\n\t\t\tthis.setState({route:'main'});\n\t\t}\n\t}\t \n\trender() {\n\t  \tconst{random ,route,fadeIn} = this.state;\n\t    return (\n\t    <div className='App'> \n\t    \t{\n\t    \troute === 'main' ? //condition statement which page to render(main page or form page)\n\t    \t<div>\n\t\t    \t<div id='quote-box'>\n\t\t    \t<p className='nav' onClick={this.onHandleRoute}>Submit a new quote</p>\n\t\t\t   \t\t<div className='quoteCSS'>\n\t\t\t   \t\t\t<div \n\t\t\t   \t\t\tclassName={fadeIn?'effect_fade':''}\n\t\t\t\t   \t\tonAnimationEnd={() => this.setState({ fadeIn: false })}>\n\t\t\t\t\t   \t\t<a id='tweet-quote'\n\t\t\t\t\t   \t\t   href='http://twitter.com/intent/tweet'\n\t\t\t\t\t   \t\t   style={{color:'#1da1f2',fontSize:'25px'}}>\n\t\t\t\t\t   \t\t   <i className=\"fab fa-twitter-square\"></i>\n\t\t\t\t\t   \t\t</a>   \t\t\n\t\t\t\t\t\t\t<DisplayData quoteData ={random}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t \t</div>\n\t\t\t\t \t \n\t\t\t\t \t<div> \n\t\t\t\t \t<p id='new-quote' \n\t\t\t\t\t \tclassName = 'btn-quote' \n\t\t\t\t\t \tonClick={this.onHandleGenerate}>Generate new Quote\n\t\t\t\t \t</p>\n\t\t\t\t \t</div>\n\t\t\t  \t</div>\t\n\t\t  \t</div>\n\t\t  \t:\n\t\t  \t<SubmitNewQuote handleRoute={this.onHandleRoute}/>   \n\t    \t} \n\t\t </div> \n\t    );\n\t  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}